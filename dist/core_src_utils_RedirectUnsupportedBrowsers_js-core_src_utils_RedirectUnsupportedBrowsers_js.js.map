{"version":3,"file":"core_src_utils_RedirectUnsupportedBrowsers_js-core_src_utils_RedirectUnsupportedBrowsers_js.js?v=ce189577edd88f0d49ca","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACrDA","sources":["webpack:///nextcloud/core/src/logger.js","webpack:///nextcloud/core/src/services/BrowserStorageService.js","webpack:///nextcloud/core/src/services/BrowsersListService.js","webpack:///nextcloud/core/src/utils/RedirectUnsupportedBrowsers.js","webpack:///nextcloud/ignored|/home/louis/workspace/nextcloud/instances/server1/node_modules/browserslist|path"],"sourcesContent":["/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { getLoggerBuilder } from '@nextcloud/logger';\nconst getLogger = user => {\n  if (user === null) {\n    return getLoggerBuilder().setApp('core').build();\n  }\n  return getLoggerBuilder().setApp('core').setUid(user.uid).build();\n};\nexport default getLogger(getCurrentUser());","/**\n * @copyright 2021 John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @author John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getBuilder } from '@nextcloud/browser-storage';\nexport default getBuilder('core').clearOnLogout().persist().build();","/**\n * @copyright 2021 John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @author John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getUserAgentRegex } from 'browserslist-useragent-regexp';\n// eslint-disable-next-line n/no-extraneous-import\nimport browserslist from 'browserslist';\nimport browserslistConfig from '@nextcloud/browserslist-config';\n\n// Generate a regex that matches user agents to detect incompatible browsers\nexport const supportedBrowsersRegExp = getUserAgentRegex({\n  allowHigherVersions: true,\n  browsers: browserslistConfig\n});\nexport const supportedBrowsers = browserslist(browserslistConfig);","/**\n * @copyright 2022 John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @author John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { generateUrl } from '@nextcloud/router';\nimport { supportedBrowsersRegExp } from '../services/BrowsersListService.js';\nimport browserStorage from '../services/BrowserStorageService.js';\nimport logger from '../logger.js';\nexport const browserStorageKey = 'unsupported-browser-ignore';\nconst redirectPath = generateUrl('/unsupported');\nconst isBrowserOverridden = browserStorage.getItem(browserStorageKey) === 'true';\n\n/**\n * Test the current browser user agent against our official browserslist config\n * and redirect if unsupported\n */\nexport const testSupportedBrowser = function () {\n  if (supportedBrowsersRegExp.test(navigator.userAgent)) {\n    logger.debug('this browser is officially supported ! üöÄ');\n    return;\n  }\n\n  // If incompatible BUT ignored, let's keep going\n  if (isBrowserOverridden) {\n    logger.debug('this browser is NOT supported but has been manually overridden ! ‚ö†Ô∏è');\n    return;\n  }\n\n  // If incompatible, NOT overridden AND NOT already on the warning page,\n  // redirect to the unsupported warning page\n  if (window.location.pathname.indexOf(redirectPath) === -1) {\n    const redirectUrl = window.location.href.replace(window.location.origin, '');\n    const base64Param = Buffer.from(redirectUrl).toString('base64');\n    history.pushState(null, null, `${redirectPath}?redirect_url=${base64Param}`);\n    window.location.reload();\n  }\n};","/* (ignored) */"],"names":[],"sourceRoot":""}